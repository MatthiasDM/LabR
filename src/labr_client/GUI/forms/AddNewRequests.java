/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package labr_client.GUI.forms;

import java.util.ArrayList;
import static java.util.Arrays.asList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import static labr_client.GUI.forms.MainWindow.queries;
import labr_client.Public.PublicFunctions;

/**
 *
 * @author LABBL
 */
public class AddNewRequests extends javax.swing.JFrame {

    /**
     * Creates new form AddNewRequests
     */
    public AddNewRequests() {
        initComponents();
        this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        loadRequests();
        addDocumentListener(jTextFieldSeach);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    public void loadRequests() {
        List<String[]> allRequests = queries.selectAllRequests();
        //List<String[]> profileRequests = queries.loadRequestPanel();
        List<String[]> profileRequests = new ArrayList<String[]>();
        PublicFunctions.SamplePredicate<String[]> filter;
        filter = new PublicFunctions.SamplePredicate<>();

        for (String[] profileRequest : profileRequests) {
            filter.varc1 = profileRequest;
            allRequests.removeIf(filter);
        }
        List<Integer[]> columnData = asList(
                new Integer[]{0, 0, 0, 0},
                new Integer[]{1, 0, 0, 0},
                new Integer[]{2, 150, -1, -1},
                new Integer[]{3, 100, -1, -1}
        );
        PublicFunctions.populateTable(jTableAddRequestTable, allRequests, 1, columnData);
        jTableAddRequestTable.setRowHeight(30);
    }

    public void addDocumentListener(JTextField myField) {

        myField.getDocument().addDocumentListener(new DocumentListener() {

            public void insertUpdate(DocumentEvent e) {
                String test = jTextFieldSeach.getText();
             
                    searchTestInDatabase();
              
            }

            public void removeUpdate(DocumentEvent e) {
                String test = jTextFieldSeach.getText();
       
                    searchTestInDatabase();
              

            }

            public void changedUpdate(DocumentEvent e) {
                String test = jTextFieldSeach.getText();
                
                    searchTestInDatabase();
               
            }
        });
    }

    public void searchTestInDatabase() {
        List<String[]> lines = new ArrayList<String[]>();
        List<String> testInfo = new ArrayList();
        if(jTextFieldSeach.getText().isEmpty()){
            testInfo.add("%");
        }else{
        testInfo.add(jTextFieldSeach.getText());
        }
        
        
        lines = MainWindow.queries.selectTest(testInfo);
        List<Integer[]> columnData = asList(
                new Integer[]{0, 0, 0, 0},
                new Integer[]{1, 0, 0, 0},
                new Integer[]{2, 150, -1, -1},
                new Integer[]{3, 100, -1, -1}
        );
        PublicFunctions.populateTable(jTableAddRequestTable, lines, 1, columnData);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldSeach = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAddRequestTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(390, 534));
        setSize(new java.awt.Dimension(390, 534));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel6.setText("Search");

        jLabel2.setText("Drag items to add requests");

        jTableAddRequestTable.setAutoCreateRowSorter(true);
        jTableAddRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "LOINCCODE", "Test name", "Classification"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableAddRequestTable.setColumnSelectionAllowed(true);
        jTableAddRequestTable.setDragEnabled(true);
        jTableAddRequestTable.setDropMode(javax.swing.DropMode.ON);
        jTableAddRequestTable.setRequestFocusEnabled(false);
        jTableAddRequestTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jTableAddRequestTable);
        jTableAddRequestTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jTableAddRequestTable.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(57, 57, 57)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldSeach, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldSeach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.setVisible(false);
        
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewRequests().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable jTableAddRequestTable;
    private javax.swing.JTextField jTextFieldSeach;
    // End of variables declaration//GEN-END:variables
}
